[tool:pytest]
# opts
addopts =
    -v
    -vv
    --cov=idl2js
    --capture=no
    --cov-report=term-missing
    --cov-report=xml

[coverage:run]
# Whether to measure branch coverage in addition to statement coverage.
branch = True
# List of file name patterns, the files to leave out of measurement or reporting
omit =
    */__main__.py

[coverage:report]
# Target coverage percentage
#fail_under = 95
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
# Donâ€™t include files in the report that are 100% covered files.
skip_covered = True


[pylint.messages_control]

# Disable the message, report, category or checker with the given id(s).
disable=
    abstract-method,
    access-member-before-definition,
    bad-mcs-classmethod-argument,
    broad-except,
    duplicate-code,
    empty-docstring,
    inconsistent-return-statements,
    missing-docstring,
    no-else-return,
    no-member,
    no-value-for-parameter,
    too-few-public-methods,
    consider-using-ternary,


[pylint.basic]

# Good variable names which should always be accepted, separated by a comma.
good-names=
    id,
    it,
    fp,


[pylint.classes]

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=
    _errHandler,


[pylint.design]

# Maximum number of arguments for function / method.
max-args=10


[isort]
; The number of blank lines to place after imports.
lines_after_imports = 2
; Includes a trailing comma on multi line imports that include parentheses.
include_trailing_comma = True
; Use parentheses for line continuation on length limit instead of backslashes.
use_parentheses = True
; Inserts a blank line before a comment following an import.
ensure_newline_before_comments = True
; The max length of an import line (used for wrapping long imports).
line_length = 100
; Multi line output opt
multi_line_output=3

[mypy]
;Specifies the Python version used to parse and check the target program.
python_version = 3.10

;Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = True

;Use visually nicer output in error messages: use soft word wrap, show source
;code snippets, and show error location markers.
pretty = True

;Prefixes each error with the relevant context.
show_error_context = True
